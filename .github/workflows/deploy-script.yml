name: Deploy Script

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
  release:
    types: [published]
  # schedule:
  #   - cron: "0 0 * * SUN"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Install clasp
        id: install-clasp
        run: sudo npm install @google/clasp@2.4.1 -g

      - name: Write CLASPRC_JSON secret to .clasprc.json file
        id: write-clasprc
        run: echo "$CLASPRC_JSON_SECRET" >> ~/.clasprc.json
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}

      - name: Check clasp login status
        id: clasp_login
        run: clasp login --status

      - name: Save current .clasprc.json contents to CLASPRC_JSON_FILE environment variable
        id: save-clasprc
        run: |
          echo ::add-mask::$(tr -d '\n\r' < ~/.clasprc.json)
          echo "CLASPRC_JSON_FILE=$(tr -d '\n\r' < ~/.clasprc.json)" >> $GITHUB_ENV        
      
      - name: Save CLASPRC_JSON_FILE environment variable to CLASPRC_JSON repo secret
        id: set-clasprc-secret
        if: ${{ env.CLASPRC_JSON_FILE != env.CLASPRC_JSON_SECRET  }}
        uses: hmanzur/actions-set-secret@v2.0.0
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}
        with:
          name: "CLASPRC_JSON"
          value: ${{ env.CLASPRC_JSON_FILE }}
          repository: ${{ github.repository }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Checkout repo
        id: checkout-repo
        if: ${{github.event_name	!= 'schedule' }}
        uses: actions/checkout@v2

      - name: Set scriptId in .clasp.json file
        id: set-script-id
        if: ${{ github.event_name	!= 'schedule'}}
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo 'Setting scriptId to Development Script ID'
            jq '.scriptId = "${{ secrets.DEV_SCRIPT_ID }}"' .clasp.json > /tmp/.clasp.json
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo 'Setting scriptId to Production Script ID'
            jq '.scriptId = "${{ secrets.PROD_SCRIPT_ID }}"' .clasp.json > /tmp/.clasp.json
          fi
          mv /tmp/.clasp.json .clasp.json

      - name: Push script to scripts.google.com
        id: clasp-push
        if: ${{ github.event_name	!= 'schedule'}}
        run: clasp push -f

      - name: Deploy Script
        id: clasp-deploy
        if: ${{github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')}}
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo 'Deploying to Development Environment'
            DEPLOYMENT_ID=${{ secrets.DEV_DEPLOYMENT_ID }}
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo 'Deploying to Production Environment'
            DEPLOYMENT_ID=${{ secrets.PROD_DEPLOYMENT_ID }}
          fi
          clasp deploy -i "$DEPLOYMENT_ID" -d "$GITHUB_REF"
          
  # dump-context:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Dump GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJSON(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Dump job context
  #       env:
  #         JOB_CONTEXT: ${{ toJSON(job) }}
  #       run: echo "$JOB_CONTEXT"
  #     - name: Dump steps context
  #       env:
  #         STEPS_CONTEXT: ${{ toJSON(steps) }}
  #       run: echo "$STEPS_CONTEXT"
  #     - name: Dump runner context
  #       env:
  #         RUNNER_CONTEXT: ${{ toJSON(runner) }}
  #       run: echo "$RUNNER_CONTEXT"
  #     - name: Dump strategy context
  #       env:
  #         STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
  #       run: echo "$STRATEGY_CONTEXT"
  #     - name: Dump matrix context
  #       env:
  #         MATRIX_CONTEXT: ${{ toJSON(matrix) }}
  #       run: echo "$MATRIX_CONTEXT"
